cmake_minimum_required(VERSION 3.20)

project(Plaster VERSION 1.0.0 LANGUAGES CXX)

# C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Default to Debug build
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Debug)
endif()

# Compiler-specific options
if(MSVC)
    add_compile_options(/W4)
else()
    add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# -------------------------------------------------------------------
# Manual dependency setup for existing vcpkg installation
# -------------------------------------------------------------------
set(VCPKG_INSTALLED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/vcpkg_installed/x64-windows")

# Check if vcpkg dependencies exist
if(EXISTS "${VCPKG_INSTALLED_DIR}")
    message(STATUS "Using vcpkg dependencies from ${VCPKG_INSTALLED_DIR}")
    
    # Include directories
    target_include_directories(${PROJECT_NAME} PRIVATE 
        "${VCPKG_INSTALLED_DIR}/include"
        "${CMAKE_SOURCE_DIR}/src"
    )
    
    # Library directories
    link_directories("${VCPKG_INSTALLED_DIR}/lib")
    link_directories("${VCPKG_INSTALLED_DIR}/debug/lib")
endif()

# Source files (exclude problematic platform files for now)
file(GLOB_RECURSE SOURCES 
    "src/*.cpp"
    "src/*.h"
)

# Remove any Vulkan-related files
list(FILTER SOURCES EXCLUDE REGEX ".*Vulkan.*")

# Create executable
add_executable(${PROJECT_NAME} ${SOURCES})

# Include directories
target_include_directories(${PROJECT_NAME} PRIVATE
    ${CMAKE_SOURCE_DIR}/src
    ${VCPKG_INSTALLED_DIR}/include
)

# Manual library linking for now
if(WIN32)
    target_link_libraries(${PROJECT_NAME} PRIVATE
        glfw3
        glad
        opengl32
        openal32
        sndfile
        imgui
        spdlog
        fmt
    )
else()
    target_link_libraries(${PROJECT_NAME} PRIVATE
        glfw
        glad
        GL
        openal
        sndfile
        imgui
        spdlog
        fmt
    )
endif()

# Assets
file(COPY ${CMAKE_SOURCE_DIR}/assets DESTINATION ${CMAKE_BINARY_DIR})

# Set VS debugger working directory
set_property(TARGET ${PROJECT_NAME}
    PROPERTY VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_BINARY_DIR}"
)