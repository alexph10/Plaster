Detecting compiler hash for triplet x64-windows...
Compiler found: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.44.35207/bin/Hostx64/x64/cl.exe
The following packages are already installed:
  * fmt:x64-windows@11.2.0
    glfw3:x64-windows@3.4#1
    glm:x64-windows@1.0.1#3
    imgui[core,glfw-binding,vulkan-binding]:x64-windows@1.91.9
  * libflac[core,stack-protector]:x64-windows@1.5.0
  * libogg:x64-windows@1.3.6#1
    libsndfile[core,external-libs,mpeg]:x64-windows@1.2.2#1
  * libvorbis:x64-windows@1.3.7#4
  * mp3lame:x64-windows@3.100#15
  * mpg123:x64-windows@1.32.9#1
    openal-soft:x64-windows@1.24.3#1
  * opus:x64-windows@1.5.2
  * pkgconf:x64-windows@2.5.1#1
    spdlog:x64-windows@1.15.3
    stb:x64-windows@2024-07-29#1
    tinyobjloader:x64-windows@2.0.0rc13
  * vcpkg-cmake:x64-windows@2024-04-23
  * vcpkg-cmake-config:x64-windows@2024-05-23
  * vcpkg-cmake-get-vars:x64-windows@2025-05-29
  * vcpkg-msbuild:x64-windows@2023-08-08
  * vcpkg-pkgconfig-get-modules:x64-windows@2024-04-03
  * vcpkg-tool-meson:x64-windows@1.9.0
    vulkan:x64-windows@2023-12-17
  * vulkan-headers:x64-windows@1.4.309.0
  * vulkan-loader:x64-windows@1.4.309.0#2
    vulkan-memory-allocator:x64-windows@3.3.0
  * yasm[core,tools]:x64-windows@1.3.0#7
glfw3 provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(glfw3 CONFIG REQUIRED)
  target_link_libraries(main PRIVATE glfw)

glfw3 provides pkg-config modules:

  # A multi-platform library for OpenGL, window and input
  glfw3

The package glm provides CMake targets:

    find_package(glm CONFIG REQUIRED)
    target_link_libraries(main PRIVATE glm::glm)

    # Or use the header-only version
    find_package(glm CONFIG REQUIRED)
    target_link_libraries(main PRIVATE glm::glm-header-only)

vulkan is compatible with built-in CMake targets:

    # https://cmake.org/cmake/help/latest/module/FindVulkan.html
    find_package(Vulkan REQUIRED)
    target_link_libraries(main PRIVATE Vulkan::Vulkan)

imgui provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(imgui CONFIG REQUIRED)
  target_link_libraries(main PRIVATE imgui::imgui)

libsndfile provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(SndFile CONFIG REQUIRED)
  target_link_libraries(main PRIVATE SndFile::sndfile)

libsndfile provides pkg-config modules:

  # A library for reading and writing audio files
  sndfile

openal-soft provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(OpenAL CONFIG REQUIRED)
  target_link_libraries(main PRIVATE OpenAL::OpenAL)

openal-soft provides pkg-config modules:

  # OpenAL is a cross-platform 3D audio API
  openal

The package spdlog provides CMake targets:

    find_package(spdlog CONFIG REQUIRED)
    target_link_libraries(main PRIVATE spdlog::spdlog)

    # Or use the header-only version
    find_package(spdlog CONFIG REQUIRED)
    target_link_libraries(main PRIVATE spdlog::spdlog_header_only)

The package stb provides CMake targets:

    find_package(Stb REQUIRED)
    target_include_directories(main PRIVATE ${Stb_INCLUDE_DIR})
tinyobjloader provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(tinyobjloader CONFIG REQUIRED)
  target_link_libraries(main PRIVATE tinyobjloader::tinyobjloader)

tinyobjloader provides pkg-config modules:

  # Tiny but powerful single file wavefront obj loader
  tinyobjloader

VulkanMemoryAllocator provides official find_package support. However, it requires the user to provide the include directory containing `vulkan/vulkan.h`. There are multiple ways to achieve this and VulkanMemoryAllocator is compatible with all of them.

    find_package(Vulkan) # https://cmake.org/cmake/help/latest/module/FindVulkan.html, CMake 3.21+
    find_package(VulkanMemoryAllocator CONFIG REQUIRED)
    target_link_libraries(main PRIVATE Vulkan::Vulkan GPUOpen::VulkanMemoryAllocator)

or

    find_package(Vulkan) # CMake 3.21+
    find_package(VulkanMemoryAllocator CONFIG REQUIRED)
    target_link_libraries(main PRIVATE Vulkan::Headers GPUOpen::VulkanMemoryAllocator)

or

    find_package(VulkanHeaders CONFIG) # From the vulkan-headers port
    find_package(VulkanMemoryAllocator CONFIG REQUIRED)
    target_link_libraries(main PRIVATE Vulkan::Headers GPUOpen::VulkanMemoryAllocator)

See the documentation for more information on setting up your project: https://gpuopen-librariesandsdks.github.io/VulkanMemoryAllocator/html/index.html

All requested installations completed successfully in: 876 us
